#! /bin/bash

CONDENSED_VULNERABILITIES=$(jq -c '.matches | .[] | {"CVE": (.vulnerability | .id), "link": (.vulnerability | .dataSource), "severity": (.vulnerability | .severity), "namespace": (.vulnerability | .namespace), "type": (.artifact | .type)}' < vulnerability_outputs/2023-07-04#09:02:54/job_scraper_vulnerablilties.json)

clean_off_quotes() {
    echo "$1" | sed -e 's/^"//g' -e 's/"$//g'
}
draw_table() {
    # Give table headers
    printf '%-25s' "CVE Number"
    printf '%-20s' "Severity Level"
    printf '%-30s' "Namespace"
    printf '%-15s' "Type"
    printf '%s\n' "Link"

    for COND_VULN in $1; do
        # echo "HI!"
        # echo "$COND_VULN"
        CVE=$(clean_off_quotes "$(echo "$COND_VULN" | jq '.CVE')")
        SEVERITY=$(clean_off_quotes "$(echo "$COND_VULN" | jq '.severity')")
        NAMESPACE=$(clean_off_quotes "$(echo "$COND_VULN" | jq '.namespace')")
        TYPE=$(clean_off_quotes "$(echo "$COND_VULN" | jq '.type')")
        LINK=$(clean_off_quotes "$(echo "$COND_VULN" | jq '.link')")
        printf '%-25s' "$CVE"
        printf '%-20s' "$SEVERITY"
        printf '%-30s' "$NAMESPACE"
        printf '%-15s' "$TYPE"
        printf '%s\n' "$LINK"
    done
}

echo -e "\nConstructing tabular output..."
TABLE=$(draw_table "$CONDENSED_VULNERABILITIES")
echo "$TABLE"

echo "$TABLE">"$VULN_TABLE_FILE_PATH"
echo "Table also available in $VULN_TABLE_FILE_PATH"